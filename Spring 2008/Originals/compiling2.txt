<ASCII-MAC>
<Version:5><FeatureSet:InDesign-Roman><ColorTable:=<Black:COLOR:CMYK:Process:0,0,0,1>>
<DefineCharStyle:pod-I=<Nextstyle:pod-I><cColor:Black><cTypeface:Italic><cSize:9.500000><cHorizontalScale:1.000000><cTracking:0><cBaselineShift:0.000000><cCase:Normal><cStrokeColor:None><cLanguage:English\: USA><cUnderline:0><cFont:Minion \(T1\)><cPosition:Normal><cStrikethru:0><cColorTint:-1.000000>>
<DefineCharStyle:pod-C=<Nextstyle:pod-C><cColor:Black><cTypeface:Regular><cSize:9.500000><cHorizontalScale:1.000000><cTracking:0><cBaselineShift:0.000000><cCase:Normal><cStrokeColor:None><cUnderline:0><cFont:Courier New><cPosition:Normal><cStrikethru:0><cColorTint:-1.000000>>
<DefineCharStyle:pod-B=<Nextstyle:pod-B><cColor:Black><cTypeface:Bold><cSize:9.500000><cHorizontalScale:1.000000><cTracking:0><cBaselineShift:0.000000><cCase:Normal><cStrokeColor:None><cUnderline:0><cFont:Courier New><cPosition:Normal><cStrikethru:0><cColorTint:-1.000000>>
<DefineParaStyle:NormalParagraphStyle=<Nextstyle:NormalParagraphStyle>>
<DefineParaStyle:Feature Section=<BasedOn:NormalParagraphStyle><Nextstyle:Feature Section><cTypeface:Bold><cSize:10.000000><pSpaceBefore:4.500000><pTabRuler:20\,Left\,.\,0\,-\;258\,Left\,.\,0\,-\;><cFont:Rockwell><pGridAlign:BaseLine>>
<DefineParaStyle:Module Author Byline=<Nextstyle:Module Author Byline><cTypeface:Italic><cSize:9.500000><cLigatures:0><pDropCapCharacters:1><pDropCapLines:1><pHyphenationLadderLimit:0><cLanguage:English\: USA><pHyphenation:0><pHyphenationZone:0.000000><cFont:Minion \(T1\)><pMaxLetterspace:0.050000><pMinLetterspace:-0.020000><pMaxGlyphScale:1.050000><pMinGlyphScale:0.950000><cHang:Baseline><pSingleWordAlignment:Left><pTextAlignment:Right><pGridAlign:BaseLine><bulFont:\<TextFont\>><bulTypeFace:\<TextStyle\>>>
<DefineParaStyle:Feature Lead=<Nextstyle:Feature Lead><cSize:9.500000><cLigatures:0><cTracking:50><pDropCapCharacters:1><pDropCapLines:3><pHyphenationLadderLimit:0><cLeading:11.400000><cLanguage:English\: USA><pHyphenation:0><pHyphenationZone:0.000000><cFont:Minion \(T1\)><pMaxLetterspace:0.050000><pMinLetterspace:-0.020000><pMaxGlyphScale:1.050000><pMinGlyphScale:0.950000><cHang:Baseline><pSingleWordAlignment:Left><pTextAlignment:JustifyLeft><pGridAlign:BaseLine>>
<DefineParaStyle:Feature Para=<BasedOn:Feature Lead><Nextstyle:Feature Para><pDropCapLines:1><pFirstLineIndent:12.024000>>
<DefineParaStyle:Feature Section Lead=<BasedOn:Feature Para><Nextstyle:Feature Section Lead><pFirstLineIndent:0.000000><cLeading:-1.000000>>
<DefineParaStyle:Feature Code Para=<Nextstyle:Feature Code Para><cSize:9.500000><cLigatures:0><pHyphenationLadderLimit:0><pLeftIndent:10.799999><cLanguage:English\: USA><pHyphenation:0><pHyphenateCapitals:0><pHyphenationZone:0.000000><pTabRuler:18\,Left\,.\,0\,\;31.5\,Left\,.\,0\,\;45\,Left\,.\,0\,\;58.5\,Left\,.\,0\,\;72\,Left\,.\,0\,\;85.5\,Left\,.\,0\,\;99\,Left\,.\,0\,\;112.5\,Left\,.\,0\,\;126\,Left\,.\,0\,\;139.5\,Left\,.\,0\,\;153\,Left\,.\,0\,\;166.5\,Left\,.\,0\,\;180\,Left\,.\,0\,\;193.5\,Left\,.\,0\,\;207\,Left\,.\,0\,\;220.5\,Left\,.\,0\,\;234\,Left\,.\,0\,\;><cFont:Courier New><pMaxLetterspace:0.050000><pMinLetterspace:-0.020000><pMaxGlyphScale:1.050000><pMinGlyphScale:0.950000><cHang:Baseline><pSingleWordAlignment:Left><pGridAlign:BaseLine>>
<DefineParaStyle:Feature Sub Section=<BasedOn:Feature Section><Nextstyle:Feature Sub Section><cUnderlineGapColor:None><cStrikeThroughGapColor:None><pWarichuAlignment:Left><rUseOTProGlyph:1><cRubyEdgeSpace:1>>
<DefineParaStyle:News URL=<BasedOn:NormalParagraphStyle><Nextstyle:News URL><cSize:9.500000><pSpaceAfter:4.500000><cFont:Minion \(T1\)><pRuleAboveGapColor:None><pRuleBelowGapColor:None><cUnderlineGapColor:None><cStrikeThroughGapColor:None><pGridAlign:BaseLine><pWarichuAlignment:Left><rUseOTProGlyph:1><cRubyEdgeSpace:1>>
<DefineParaStyle:News para=<BasedOn:NormalParagraphStyle><Nextstyle:News para><cSize:9.500000><cFont:Minion \(T1\)><pRuleAboveGapColor:None><pRuleBelowGapColor:None><cUnderlineGapColor:None><cStrikeThroughGapColor:None><pGridAlign:BaseLine><pWarichuAlignment:Left><rUseOTProGlyph:1><cRubyEdgeSpace:1>>
<DefineParaStyle:News Headline=<BasedOn:NormalParagraphStyle><Nextstyle:News Headline><cTypeface:Bold><cSize:9.500000><pSpaceBefore:4.500000><cFont:Gill Sans \(T1\)><pRuleAboveGapColor:None><pRuleBelowGapColor:None><cUnderlineGapColor:None><cStrikeThroughGapColor:None><pGridAlign:BaseLine><pWarichuAlignment:Left><rUseOTProGlyph:1><cRubyEdgeSpace:1>>
<DefineParaStyle:Calendar URL=<Nextstyle:Calendar URL><cTypeface:Italic><cSize:10.000000><cLanguage:English\: USA><cFont:Minion \(T1\)><pRuleAboveGapColor:None><pRuleBelowGapColor:None><pTextAlignment:Center><cUnderlineGapColor:None><cStrikeThroughGapColor:None><pWarichuAlignment:Left><rUseOTProGlyph:1><cRubyEdgeSpace:1>>
<DefineParaStyle:Calendar title=<Nextstyle:Calendar title><cSize:10.000000><cLanguage:English\: USA><cFont:Minion \(T1\)><pRuleAboveGapColor:None><pRuleBelowGapColor:None><pTextAlignment:Center><cUnderlineGapColor:None><cStrikeThroughGapColor:None><pWarichuAlignment:Left><rUseOTProGlyph:1><cRubyEdgeSpace:1>>
<DefineParaStyle:Calendar location=<Nextstyle:Calendar location><cSize:10.000000><cLanguage:English\: USA><cFont:Minion \(T1\)><pRuleAboveGapColor:None><pRuleBelowGapColor:None><pTextAlignment:Center><cUnderlineGapColor:None><cStrikeThroughGapColor:None><pWarichuAlignment:Left><rUseOTProGlyph:1><cRubyEdgeSpace:1>>
<DefineParaStyle:Calendar date=<Nextstyle:Calendar date><cTypeface:Bold><cSize:11.000000><cCase:All Caps><cLanguage:English\: USA><cFont:Gill Sans \(T1\)><pRuleAboveGapColor:None><pRuleBelowGapColor:None><pTextAlignment:Center><cUnderlineGapColor:None><cStrikeThroughGapColor:None><pWarichuAlignment:Left><rUseOTProGlyph:1><cRubyEdgeSpace:1>>
<DefineParaStyle:Feature Title=<Nextstyle:Feature Title><cSize:26.500000><cLeading:13.500000><cFont:Rockwell Extra Bold><pTextAlignment:Center>>
<DefineParaStyle:Feature Byline=<BasedOn:NormalParagraphStyle><Nextstyle:Feature Byline><cTypeface:Italic><cSize:11.000000><cLeading:13.000000><cFont:Gill Sans \(TT\)><pTextAlignment:Right>>
<DefineParaStyle:Feature Deck=<BasedOn:Feature Byline><Nextstyle:Feature Deck><cTypeface:Regular><pSpaceBefore:4.500000><pTextAlignment:Center>>
<DefineParaStyle:Normal=<Nextstyle:Normal><KeyboardShortcut:Shift\+Cmd\+Num 6><cSize:11.000000><cLigatures:0><pHyphenationLadderLimit:0><cLeading:13.000000><cLanguage:English\: USA><pHyphenation:0><pHyphenationZone:0.000000><pSpaceBefore:4.500000><pSpaceAfter:4.500000><cFont:Arial \(TT\)><pMaxLetterspace:0.050000><pMinLetterspace:-0.020000><pMaxGlyphScale:1.050000><pMinGlyphScale:0.950000><cHang:Baseline><pSingleWordAlignment:Left><pTextAlignment:JustifyLeft>>
<DefineParaStyle:Body Copy=<BasedOn:Normal><Nextstyle:Body Copy><cSize:9.500000><pFirstLineIndent:12.024000><cLeading:-1.000000><pSpaceBefore:0.000000><pSpaceAfter:0.000000><cFont:Minion \(T1\)><pGridAlign:BaseLine><bulFont:\<TextFont\>><bulTypeFace:\<TextStyle\>>>
<DefineParaStyle:author byline=<BasedOn:Feature Para><Nextstyle:author byline><cTypeface:Italic><bulFont:\<TextFont\>><bulTypeFace:\<TextStyle\>>>
<DefineParaStyle:article head=<BasedOn:Normal><Nextstyle:Normal><KeyboardShortcut:Shift\+Cmd\+Num 1><cSize:14.000000><cHorizontalScale:1.100000><pSpaceBefore:13.500000><pSpaceAfter:0.000000><cFont:Arial Black><pKeepWithNext:4><cSkew:15.000000><pRuleBelowColor:Black><pRuleBelowTint:100.000000><pRuleBelowOffset:9.000000>>
<DefineParaStyle:article subhead=<BasedOn:article head><Nextstyle:article subhead><KeyboardShortcut:Shift\+Cmd\+Num 2><cSize:11.000000><pSpaceBefore:18.000000>>
<pstyle:Feature Lead>It<0x2019>s not hard to come up with a situation where you want a different version of Perl than the system gives you. Perl 5.10 just came out and you<0x2019>re excited to use it, but you also need to keep everything you already have working. Or maybe you just got a CPAN Testers report that says that your module fails its tests on Perl 5.005. How can you test that before you upload a new version? You<0x2019>re on a shared-hosting service and you want to use a different Perl version, but you<0x2019>re stuck with Perl 5.8.0.
<pstyle:Feature Para>I realized, ratherly lately, that most people probably have never compiled their own <CharStyle:pod-C>perl<CharStyle:> binary. It<0x2019>s the disadvantage of Perl being so popular; it<0x2019>s preinstalled in many places, and on Windows I could use ActivePerl which requires no compilation. Although I still have the habit of downloading the latest stable Perl to compile and install it on any new system, most people don<0x2019>t do that. If it isn<0x2019>t preinstalled, someone does it for them.
<pstyle:Feature Para>When someone else compiles <CharStyle:pod-C>perl<CharStyle:>, they<0x2019>re usually not thinking about what you are going to do with Perl. They compile a vanilla <CharStyle:pod-C>perl<CharStyle:> that should work well with most tasks for most users. Some systems come with <CharStyle:pod-C>perl<CharStyle:> binaries that have features that most people don<0x2019>t want simply because the package manager turns on all of the features.
<pstyle:Feature Para>I might be able to benefit from optimizations by dumping features I don<0x2019>t want. For instance, do you have a threading <CharStyle:pod-C>perl<CharStyle:>? Taht might be nice, but if you don<0x2019>t want threading, you can tweak the performance a bit. Or, do you have a <CharStyle:pod-C>perl<CharStyle:> compiled with <CharStyle:pod-C>DEBUGGING<CharStyle:>? If you aren<0x2019>t hacking on the <CharStyle:pod-C>perl<CharStyle:> source code, you probably don<0x2019>t want <CharStyle:pod-C>DEBUGGING<CharStyle:><0x2019>s performance penalty.
<pstyle:Feature Para>You can read about the compilation process in the README and INSTALL files in the top level of the <CharStyle:pod-C>perl<CharStyle:> source. I want to specifically apply this to compiling a new <CharStyle:pod-C>perl<CharStyle:> binary to see how it performs relative to what I already have, and how my applications work with new version of Perl, such as Perl 5.10. In each case, I want to try before I buy, and I want to do it as a normal user.
<pstyle:Feature Section><cTypeface:Regular><cFont:Wingdings>n<cTypeface:><cFont:> Getting the source	
<pstyle:Feature Section Lead>If you haven<0x2019>t compiled Perl before, you probably don<0x2019>t know where to get it. With package managers, someone has decided all of that information for you, and it might be downloading from it<0x2019>s own repository so it can apply patches and other customizations.
<pstyle:Feature Para>The <CharStyle:pod-C>perl<CharStyle:> source code is on CPAN with everything else, but it<0x2019>s in the /src directory instead of the /authors directory (where the modules are). Start with the README file at <CharStyle:pod-I>http://www.cpan.org/src/README.html<CharStyle:>, which has links to most of the <CharStyle:pod-C>perl<CharStyle:> source distributions still on CPAN.
<pstyle:Feature Para>If you want to try a stable version of <CharStyle:pod-C>perl<CharStyle:>, look for an even number in the major release, such as 5.6, 5.8, or 5.10. The versions with an odd number are development versions that lead up to the next maintenance version. And, lately, the Perl 5 Porters have made an additional, explicit distinction about <CharStyle:pod-I>testing<CharStyle:> versions: these have a 0 in the point release, such as 5.8.0 and 5.10.0. Even though the testing versions are in the maintenance branch, they aren<0x2019>t for production use.
<pstyle:Feature Para>This jargon is different that what you may have noticed before. Formerly, the maintenance branch was the <0x201C>stable<0x201D> branch and there was a stable.tar.gz, and for the development branch there was a devel.tar.gz. The Perl 5 Porters no longer use these special links to the most current distributions in those branches. Now you have to look for the particular distribution that you want.
<pstyle:Feature Section><cTypeface:Regular><cFont:Wingdings>n<cTypeface:><cFont:> Configuring the source	
<pstyle:Feature Section Lead>Before I can compile <CharStyle:pod-C>perl<CharStyle:>, I have to configure the source for my system and preferences.
<pstyle:Feature Para>First, I run the Configure script, which prompts me for several questions it has about the installation. I can change the library search path, the installation directories, and many other things. Download the <CharStyle:pod-C>perl<CharStyle:> source for the version you want to try, unpack it, and run Configure. If I just want the defaults, I could skip all the questions and let Configure make its best guess:
<pstyle:Feature Code Para><pSpaceAfter:4.500000><pSpaceBefore:4.500000>prompt\> ./Configure -des<pSpaceBefore:>
<pSpaceAfter:><pstyle:Feature Para>That<0x2019>s not a lot of fun, and everyone should go through all the questions at least once to see what they are and what Configure is doing. In that case I run it without any options:
<pstyle:Feature Code Para><pSpaceAfter:4.500000><pSpaceBefore:4.500000>prompt\> ./Configure<pSpaceBefore:>
<pSpaceAfter:><pstyle:Feature Para>When I<0x2019>m answering the questions my self, I have to watch out that I don<0x2019>t overwrite /usr/bin/perl. If I already have one in place, Configure shouldn<0x2019>t try to overwrite it, but if I<0x2019>m getting bored with the questions and am going quickly through them, I might give the wrong answer to this one by tapping on the <CharStyle:pod-C>y<CharStyle:> key too many times:
<pstyle:Feature Code Para><pSpaceBefore:4.500000>Many scripts expect perl to be installed as /usr/bin/perl.
<pSpaceBefore:><pstyle:Feature Code Para>
<pstyle:Feature Code Para>If you want to, I can install the perl you are about to compile
<pstyle:Feature Code Para>as /usr/bin/perl (in addition to /Users/brian/Desktop/opt/perl/bin/perl).
<pstyle:Feature Code Para>
<pstyle:Feature Code Para>However, please note that because you already have a /usr/bin/perl,
<pstyle:Feature Code Para>overwriting that with a new Perl would very probably cause problems.
<pstyle:Feature Code Para>Therefore I'm assuming you don't want to do that (unless you insist).
<pstyle:Feature Code Para>
<pstyle:Feature Code Para><pSpaceAfter:4.500000>Do you want to install perl as /usr/bin/perl? [n] 
<pSpaceAfter:><pstyle:Feature Para>If I mess up that question, or any of the others, I don<0x2019>t worry. I<0x2019>ll have a chance to fix that later by editing my answers. Once I<0x2019>ve gone through the Configure questions, it creates a config.sh file which contains all of the information that Configure found or I provided. When Configure gets to that point, it gives me a chance to edit config.sh. This is my chance to change any of the settings before Configure goes onto the next part, which generates more files based on the answers. If I gave Configure the <CharStyle:pod-C>-e<CharStyle:> option, it automatically goes past this point.
<pstyle:Feature Para>Once I<0x2019>ve gone through Configure, my answers and the result of those answers are in config.sh and <CharStyle:pod-C>Policy.sh<CharStyle:>. If I<0x2019>ve messed up or want to start over, I just run Configure again. It uses the answers in these files as its default answers.
<pstyle:Feature Code Para><pSpaceBefore:4.500000>I see a config.sh file.  Shall I use it to set the defaults? [y] 
<pSpaceBefore:><pstyle:Feature Code Para><pSpaceAfter:4.500000>Fetching default answers from your old config.sh file...
<pSpaceAfter:><pstyle:Feature Para>I can go through the prompts again, accepting the defaults from config.sh where I don<0x2019>t want to change anything, and answering new answers when I do. When I get to the point where I want to accept the rest of the defaults, I can answer any question with the literal string <CharStyle:pod-C>&-d<CharStyle:>, after which Configure will take the default answers for the rest of the prompts.
<pstyle:Feature Code Para><pSpaceAfter:4.500000><pSpaceBefore:4.500000>XXX<pSpaceBefore:>
<pSpaceAfter:><pstyle:Feature Sub Section>Changing the installation location
<pstyle:Feature Para>As I mentioned earlier, I don<0x2019>t want to overwrite any <CharStyle:pod-C>perl<CharStyle:> that already exists on my system. I don<0x2019>t want to break things that are currently working, and since this is a new <CharStyle:pod-C>perl<CharStyle:> I want to take it for a test drive first. I<0x2019>ll install the new <CharStyle:pod-C>perl<CharStyle:> and all of its support files and modules in their own, isolated directory/
<pstyle:Feature Para>I can also change some of the Configure settings by specifying them on the command line. The most interesting one in this case is <CharStyle:pod-C>prefix<CharStyle:>, which is the base path for the installation. I can make <CharStyle:pod-C>prefix<CharStyle:> one of my own directories:
<pstyle:Feature Code Para><pSpaceAfter:4.500000><pSpaceBefore:4.500000>prompt\> ./Configure -Dprefix=/usr/local/perls/perl-test-1234<pSpaceBefore:>
<pSpaceAfter:><pstyle:Feature Para>I can even combine this with <CharStyle:pod-C>-des<CharStyle:> so I only change <CharStyle:pod-C>prefix<CharStyle:> and accept the defaults from everything else:
<pstyle:Feature Code Para><pSpaceAfter:4.500000><pSpaceBefore:4.500000>prompt\> ./Configure -des -Dprefix=/usr/local/perls/perl-test-1234<pSpaceBefore:>
<pSpaceAfter:><pstyle:Feature Sub Section>Other common settings
<pstyle:Feature Para>Although I can change any of the setting that I want, the ones I most often change are those for threading and debugging. The INSTALL files goes through each of theses and many more. I don<0x2019>t have to go through all of the Configure prompts because I can set them right on the command line.
<pstyle:Feature Para>To enable threads support, perhaps to test the idea that the <CharStyle:pod-C>DBI<CharStyle:> module is not thread-safe (it says it isn<0x2019>t in its docs), I tell Configure to <CharStyle:pod-C>usethreads<CharStyle:>:
<pstyle:Feature Code Para><pSpaceAfter:4.500000><pSpaceBefore:4.500000>Configure -Dusethreads<pSpaceBefore:>
<pSpaceAfter:><pstyle:Feature Para>To enable DEBUGGING, which I<0x2019>ll need to use some the Perl debugging and profiling tools, I use two different settings:
<pstyle:Feature Code Para><pSpaceAfter:4.500000><pSpaceBefore:4.500000>Configure -Doptimize='-g' -DDEBUGGING<pSpaceBefore:>
<pSpaceAfter:><pstyle:Feature Para>The <CharStyle:pod-C>-g<CharStyle:> option to the C compiler so I can use executable debuggers such as <CharStyle:pod-C>gdb<CharStyle:>. That<0x2019>s for debugging <CharStyle:pod-C>perl<CharStyle:> itself, not necessarily the Perl programs that it is running. The <CharStyle:pod-C>DEBUGGING<CharStyle:> feature allows Perl level debuggers ( the -D switch and its variants; see perlrun) to watch what is going on. I only turn these on when I want <CharStyle:pod-C>perl<CharStyle:> to do the extra work to support them.
<pstyle:Feature Section><cTypeface:Regular><cFont:Wingdings>n<cTypeface:><cFont:> Compiling the source	
<pstyle:Feature Section Lead>Once I have everything configured, the rest is pretty easy. Configure made a Makefile for me, so I just run <CharStyle:pod-C>make<CharStyle:>. I start with <CharStyle:pod-C>make test<CharStyle:> so it compiles everything and immediately goes on to the tests:
<pstyle:Feature Code Para><pSpaceAfter:4.500000><pSpaceBefore:4.500000>prompt\> make test<pSpaceBefore:>
<pSpaceAfter:><pstyle:Feature Para>When I<0x2019>m ready to install <CharStyle:pod-C>perl<CharStyle:>, I tell make to do that portion. Notice that I don<0x2019>t use sudo or anything else to get me more privileges:
<pstyle:Feature Code Para><pSpaceAfter:4.500000><pSpaceBefore:4.500000>prompt\> make install<pSpaceBefore:>
<pSpaceAfter:><pstyle:Feature Para>There, I have my new <CharStyle:pod-C>perl<CharStyle:>. I can try to run it from its new location. If I run it with the -V switch I can see all of the compilation settings, including the module installation paths:
<pstyle:Feature Code Para><pSpaceAfter:4.500000><pSpaceBefore:4.500000>prompt\> /usr/local/perls/perl-test-1234/bin/perl -V<pSpaceBefore:>
<pSpaceAfter:><pstyle:Feature Para>The <CharStyle:pod-C>-V<CharStyle:> switch shows me the compilation options, and I should find my settings in the output.
<pstyle:Feature Para>If I like what I<0x2019>ve created, I can save the config.sh and Policy.sh. When I have to compile <CharStyle:pod-C>perl<CharStyle:> again, perhaps from a different source tree, I can drop in those two files and Configure will automatically pick up the answers I<0x2019>ve already given.
<pstyle:Feature Section><cTypeface:Regular><cFont:Wingdings>n<cTypeface:><cFont:> Using my new perl	
<pstyle:Feature Section Lead>I want to put my new <CharStyle:pod-C>perl<CharStyle:> into use. I have it sequestered in its own bin directory in its own directory tree, and I can access it by its own (long) path:
<pstyle:Feature Code Para><pSpaceAfter:4.500000><pSpaceBefore:4.500000>/usr/local/perls/perl-test-1234/bin/perl<pSpaceBefore:>
<pSpaceAfter:><pstyle:Feature Para>In that directory I have several <CharStyle:pod-C>perl<CharStyle:> source directories, each named after their particular use and special compilation options:
<pstyle:Feature Code Para><pSpaceBefore:4.500000>prompt\> ls -1
<pSpaceBefore:><pstyle:Feature Code Para>perl-5.10.0-final
<pstyle:Feature Code Para>perl-5.10.0-rc2
<pstyle:Feature Code Para>perl-5.6.2
<pstyle:Feature Code Para>perl-5.6.2-dist
<pstyle:Feature Code Para>perl-5.8.8-for-pugs
<pstyle:Feature Code Para>perl-5.8.8-threaded
<pstyle:Feature Code Para>perl-5.8.8-threaded-debugging
<pstyle:Feature Code Para>perl-5.9.4
<pstyle:Feature Code Para>perl-5.9.5
<pstyle:Feature Code Para>perl-5.9.5-for-kp6
<pstyle:Feature Code Para>perl4
<pstyle:Feature Code Para><pSpaceAfter:4.500000>perl-test-1234
<pSpaceAfter:><pstyle:Feature Para>I can<0x2019>t remember all of those and I don<0x2019>t want to constantly adjust my <CharStyle:pod-C>PATH<CharStyle:>. I create symlinks in /usr/local/bin (although I could do it for any directory that<0x2019>s in my <CharStyle:pod-C>PATH<CharStyle:>).
<pstyle:Feature Sub Section>Installing modules
<pstyle:Feature Para>When I want install modules, I can still use <CharStyle:pod-C>CPAN.pm<CharStyle:>, but I need to use the right <CharStyle:pod-C>perl<CharStyle:> to call it. Everything gets installed in the right place because <CharStyle:pod-C>CPAN.pm<CharStyle:> looks at the configured paths for the calling <CharStyle:pod-C>perl<CharStyle:> to decide where to put things:
<pstyle:Feature Code Para><pSpaceAfter:4.500000><pSpaceBefore:4.500000>prompt\> perl-5.10.0-final -MCPAN -e shell<pSpaceBefore:>
<pSpaceAfter:><pstyle:Feature Para>If I want to use my <CharStyle:pod-C>cpan<CharStyle:> utility, I have to call it with the right <CharStyle:pod-C>perl<CharStyle:>. Since <CharStyle:pod-C>perl<CharStyle:> doesn<0x2019>t search my PATH, I have to give the full path to <CharStyle:pod-C>cpan<CharStyle:>:
<pstyle:Feature Code Para><pSpaceAfter:4.500000><pSpaceBefore:4.500000>prompt\> perl-5.10.0-final /usr/local/bin/cpan LWP::Simple<pSpaceBefore:>
<pSpaceAfter:><pstyle:Feature Para><CharStyle:pod-C>CPAN.pm<CharStyle:> and <CharStyle:pod-C>cpan<CharStyle:> take their cues from the <CharStyle:pod-C>perl<CharStyle:> that ran them, so they<0x2019>ll both use the correct module paths for installations, as well as testing the modules.
<pstyle:Feature Para>When I first starting doing this, I ran into a big problem. In some of my modules, I was calling <CharStyle:pod-C>perl<CharStyle:> from within the test suite because I wanted to ensure that my scripts compiled. I had code with a hardcoded perl:
<pstyle:Feature Code Para><pSpaceAfter:4.500000><pSpaceBefore:4.500000>my $output = `perl -c blib/script/script.pl`<pSpaceBefore:>
<pSpaceAfter:><pstyle:Feature Para>When <CharStyle:pod-C>perl<CharStyle:> runs this test script, it eventually executes the shell command in the backticks. The backticks don<0x2019>t care which <CharStyle:pod-C>perl<CharStyle:> I am using and finds my command like any other command: it searches the directories in <CharStyle:pod-C>$ENV{PATH}<CharStyle:>. Now that I have several perls, the backticks are going to find the first perl in my path. That<0x2019>s probably going to be a stable perl for system use: remember, I didn<0x2019>t change my path, and the other perls I<0x2019>ve created aren<0x2019>t named exactly <CharStyle:pod-C>perl<CharStyle:>. There<0x2019>s a mismatch as there<0x2019>s one <CharStyle:pod-C>perl<CharStyle:> running the test suite and another <CharStyle:pod-C>perl<CharStyle:> running in the backticks, and both of them are using the temporary additions to <CharStyle:pod-C>@INC<CharStyle:> that the test harness added, mostly blib/lib.
<pstyle:Feature Para>None of that would have been a problem if I let the script figure out on its own which <CharStyle:pod-C>perl<CharStyle:> it should use. The <CharStyle:pod-C>$^X<CharStyle:> variable that hold the path to the <CharStyle:pod-C>perl<CharStyle:> that is running the script. I should use that instead:
<pstyle:Feature Code Para><pSpaceAfter:4.500000><pSpaceBefore:4.500000>my $output = `$^X -c blib/script/script.pl`<pSpaceBefore:>
<pSpaceAfter:><pstyle:Feature Section><cTypeface:Regular><cFont:Wingdings>n<cTypeface:><cFont:> References	
<pstyle:Feature Section Lead>The README file in each <CharStyle:pod-C>perl<CharStyle:> distribution has the basic instructions to compile <CharStyle:pod-C>perl<CharStyle:>.
<pstyle:Feature Para>The INSTALL file in each <CharStyle:pod-C>perl<CharStyle:> distribution has the detailed instructions for running Configure and customizing <CharStyle:pod-C>perl<CharStyle:>.
<pstyle:Feature Para>The perlbench utility by Gisle Aas can compare the performance of different perl binaries. It comes with a stock set of tests for basic Perl features, and a way that I can add my own tests. It<0x2019>s on CPAN (http://search.cpan.org/dist/perlbench/). I cover this in Chapter 6, <0x201C>Benchmarking<0x201D>, of <CharStyle:pod-I>Mastering Perl<CharStyle:>.
<pstyle:Feature Section><cTypeface:Regular><cFont:Wingdings>n<cTypeface:><cFont:> About the Author	
<pstyle:Feature Section Lead>brian d foy is the publisher of <CharStyle:pod-I>The Perl Review<CharStyle:>.

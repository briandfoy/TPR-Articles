Subject: Re: How to overwrite or mock -e for testing?From: Michele Dondi <bik.mido@tiscalinet.it>Newsgroups: comp.lang.perl.miscDate: Thu, Oct 30, 2008 6:06 AMMessage-ID: <775jg41r5voj8nt6s3h2105liq6nfonrj1@4ax.com>On Mon, 27 Oct 2008 21:21:47 +0100, Helmut Wollmersdorfer<helmut@wollmersdorfer.at> wrote:>I tried to mock '-e'>>=== get_foo.t ===>#!perl -T>>use strict;>use warnings;>>my %file;>>use overload>   '-e' => sub {>     my ($name) = @_;>     print 'trying mocked -e',"\n";>     return exists $file{$name};>   };Appears to work:  C:\temp>cat foo.pl  #!/usr/bin/perl    use strict;  use warnings;    my %file;    BEGIN {      no strict 'refs';      *{'CORE::GLOBAL::-e'} = sub {          my ($name) = @_;          warn "trying mocked -e\n";          return exists $file{$name};      };  }    use Test::More qw(no_plan);    $file{foo} = 1;  ok(-e $_, "file $_ exists") for qw/foo bar/;    __END__    C:\temp>perl foo.pl  ok 1 - file foo exists  not ok 2 - file bar exists  #   Failed test 'file bar exists'  #   at foo.pl line 20.  1..2  # Looks like you failed 1 test of 2.HTH,Michele-- {$_=pack'B8'x25,unpack'A8'x32,$a^=sub{pop^pop}->(map substr(($a||=join'',map--$|x$_,(unpack'w',unpack'u','G^<R<Y]*YB='.'KYU;*EVH[.FHF2W+#"\Z*5TI/ER<Z`S(G.DZZ9OX0Z')=~/./g)x2,$_,256),7,249);s/[^\w,]/ /g;$ \=/^J/?$/:"\r";print,redo}#JAPH,
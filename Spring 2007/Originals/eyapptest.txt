<ASCII-MAC><Version:4><FeatureSet:InDesign-Roman><ColorTable:=<Black:COLOR:CMYK:Process:0,0,0,1>><DefineCharStyle:Foo=<Nextstyle:Foo><cTypeface:Regular><cSize:10.000000><cLigatures:0><cNoBreak:0><cFont:Mona Lisa Solid ITC TT>><DefineCharStyle:Normal=<Nextstyle:Normal><cSize:10.000000><cLigatures:0><cNoBreak:0><cFont:Arial>><DefineParaStyle:Normal-1=<Nextstyle:Normal-1><cSize:11.000000><cLigatures:0><pHyphenationLadderLimit:0><cLeading:13.000000><cLanguage:English\: USA><pHyphenation:0><pHyphenationZone:0.000000><pSpaceBefore:4.500000><pSpaceAfter:4.500000><cFont:Arial><pMaxLetterspace:0.050000><pMinLetterspace:-0.020002><pMaxGlyphScale:1.050000><pMinGlyphScale:0.949999><cHang:Baseline><pSingleWordAlignment:Left><pTextAlignment:JustifyLeft><pGridAlign:BaseLine>><DefineParaStyle:Normal=<Nextstyle:Normal><cSize:11.000000><cLigatures:0><pHyphenationLadderLimit:0><cLeading:13.000000><cLanguage:English\: USA><pHyphenation:0><pHyphenationZone:0.000000><pSpaceBefore:4.500000><pSpaceAfter:4.500000><cFont:Arial><pMaxLetterspace:0.050000><pMinLetterspace:-0.020001><pMaxGlyphScale:1.050000><pMinGlyphScale:0.949999><cHang:Baseline><pSingleWordAlignment:Left><pTextAlignment:JustifyLeft><pGridAlign:BaseLine>><ParaStyle:article subhead>Introduction<ParaStyle:Normal>Almost any reader of this Journal knows what <CharStyle:pod-I>Parsing<CharStyle:Normal> is about. One of the strengths of Perl is its excellence for text analysis. Additionally to its embedded regular expression capacities, modules like <CharStyle:pod-C>Parse::RecDescent<CharStyle:Normal>  and <CharStyle:pod-C>Parse::Yapp<CharStyle:Normal>  make easier the task of text understanding and text transformation. This is in clear contrast with the absence of Perl 5 generic tools FOOTNOTE{There are however very good specific ones, for example, for <CharStyle:pod-C>XML<CharStyle:Normal> and <CharStyle:pod-C>HTML<CharStyle:Normal> support and symbolic mathematics %  } giving support for the subsequent stages of text processing. The exception being the module <CharStyle:pod-C>Language::AttributeGrammar<CharStyle:Normal> . Parrot does well in this chapter, having the Parrot Grammar Engine (PGE)  and the Tree Grammar Engine (TGE).<ParaStyle:Normal><CharStyle:pod-C>Parse::Eyapp<CharStyle:Normal> (Extended yapp) is a collection of modules that extends Francois Desarmenien <CharStyle:pod-C>Parse::Yapp<CharStyle:Normal> <CharStyle:pod-C>1.05<CharStyle:Normal>: Any <CharStyle:pod-C>yapp<CharStyle:Normal> program runs without changes with <CharStyle:pod-C>eyapp<CharStyle:Normal>. Additionally <CharStyle:pod-C>Parse::Eyapp<CharStyle:Normal> provides new functionalities like named attributes, EBNF-like expressions, modifiable default actions, abstract syntax tree building and translation schemes. It also provides a language for tree transformations. This article introduces the basics of translator construction with <CharStyle:pod-C>Parse::Eyapp<CharStyle:Normal> through an example that compiles infix expressions into Parrot Intermediate Representation (PIR). The input to the program will be a (semicolon separated) list of infix expressions, like: